import{_ as s,C as i,c as n,o as c,ag as r,G as o,j as t,w as l,a}from"./chunks/framework.DaU-16c2.js";const _=JSON.parse('{"title":"Qrcode 二维码","description":"","frontmatter":{},"headers":[],"relativePath":"components/qrcode.md","filePath":"components/qrcode.md","lastUpdated":1750955128000}'),h={name:"components/qrcode.md"};function p(u,e,b,m,k,g){const d=i("ClientOnly");return c(),n("div",null,[e[3]||(e[3]=r(`<h1 id="qrcode-二维码" tabindex="-1">Qrcode 二维码 <a class="header-anchor" href="#qrcode-二维码" aria-label="Permalink to &quot;Qrcode 二维码&quot;">​</a></h1><p>生成二维码；底层的二维码的渲染是使用 <a href="https://www.npmjs.com/package/qrcode-generator-es" target="_blank" rel="noreferrer">qrcode-generator-es</a> 进行渲染</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Qrcode, regist } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Qrcode);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p><code>text</code> 属性为二维码内容</p>`,7)),o(d,null,{default:l(()=>e[0]||(e[0]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-qrcode text="Hello World"></l-qrcode>
`)],-1)])),_:1,__:[0]}),e[4]||(e[4]=t("h3",{id:"样式调整",tabindex:"-1"},[a("样式调整 "),t("a",{class:"header-anchor",href:"#样式调整","aria-label":'Permalink to "样式调整"'},"​")],-1)),e[5]||(e[5]=t("p",null,[a("可以通过 "),t("code",null,"fill"),a(" 属性更改二维码颜色, "),t("code",null,"size"),a(" 属性更改大小; 注意: 实际的二维码的大小不一定跟传递的 "),t("code",null,"size"),a(" 一样大，因为会调整每一个二维码小单元格尺寸, 所以最终大小只能是小于等于传递的 "),t("code",null,"size")],-1)),o(d,null,{default:l(()=>e[1]||(e[1]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-qrcode text="Hello World" fill="#4998f4" size="120"></l-qrcode>
`)],-1)])),_:1,__:[1]}),e[6]||(e[6]=t("h3",{id:"图标",tabindex:"-1"},[a("图标 "),t("a",{class:"header-anchor",href:"#图标","aria-label":'Permalink to "图标"'},"​")],-1)),e[7]||(e[7]=t("p",null,[a("可以将 "),t("code",null,"logo"),a(" 放入二维码")],-1)),o(d,null,{default:l(()=>e[2]||(e[2]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-qrcode text="Hello World" icon="/litos-ui/logo.svg"></l-qrcode>
`)],-1)])),_:1,__:[2]}),e[8]||(e[8]=r('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="qrcode-attibutes" tabindex="-1">Qrcode Attibutes <a class="header-anchor" href="#qrcode-attibutes" aria-label="Permalink to &quot;Qrcode Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>text</code></td><td>二维码内容</td><td><code>string</code></td><td>—</td></tr><tr><td><code>fill</code></td><td>二维码颜色</td><td><code>string</code></td><td><code>#000000</code></td></tr><tr><td><code>size</code></td><td>二维码大小</td><td><code>string</code></td><td><code>100</code></td></tr><tr><td><code>level</code></td><td>二维码容错率, <code>L</code>、<code>M</code>、<code>Q</code>、<code>H</code></td><td><code>string</code></td><td><code>M</code></td></tr></tbody></table>',3))])}const f=s(h,[["render",p]]);export{_ as __pageData,f as default};
