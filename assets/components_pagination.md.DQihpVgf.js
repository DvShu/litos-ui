import{_ as d,C as o,c as r,o as p,ag as l,G as e,j as n,w as i,a as t}from"./chunks/framework._HD6XqYi.js";const y=JSON.parse('{"title":"Pagination 分页","description":"","frontmatter":{},"headers":[],"relativePath":"components/pagination.md","filePath":"components/pagination.md","lastUpdated":1753250992000}'),h={name:"components/pagination.md"};function c(b,a,g,u,k,E){const s=o("ClientOnly");return p(),r("div",null,[a[4]||(a[4]=l(`<h1 id="pagination-分页" tabindex="-1">Pagination 分页 <a class="header-anchor" href="#pagination-分页" aria-label="Permalink to &quot;Pagination 分页&quot;">​</a></h1><p>当加载所有数据时将花费更多时间，使用分页组件可以快速切换数据。</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Pagination,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  regist,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Button,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ArrowLeftIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ArrowRightIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DArrowLeftIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DArrowRightIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MoreIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Input,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Pagination,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Button,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ArrowLeftIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ArrowRightIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DArrowLeftIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  DArrowRightIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MoreIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Input,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>只需要传递 <code>total</code> 或者 <code>page-count</code> 就能显示一个分页组件. 在 <code>change</code> 事件中进行分页处理</p>`,7)),e(s,null,{default:i(()=>[...a[0]||(a[0]=[n("l-code-preview",null,[n("textarea",{lang:"html"},`  <l-pagination total="100"></l-pagination>
`)],-1)])]),_:1}),a[5]||(a[5]=n("h3",{id:"对齐方式",tabindex:"-1"},[t("对齐方式 "),n("a",{class:"header-anchor",href:"#对齐方式","aria-label":'Permalink to "对齐方式"'},"​")],-1)),a[6]||(a[6]=n("p",null,[t("通过 "),n("code",null,"align"),t(" 来设置对齐方式. 取值有: start、center、end")],-1)),e(s,null,{default:i(()=>[...a[1]||(a[1]=[n("l-code-preview",null,[n("textarea",{lang:"html"},`  <l-pagination total="100" align="start"></l-pagination>
  <hr/>
  <l-pagination total="100" align="center"></l-pagination>
  <hr/>
  <l-pagination total="100" align="end"></l-pagination>
`)],-1)])]),_:1}),a[7]||(a[7]=n("h3",{id:"单页隐藏",tabindex:"-1"},[t("单页隐藏 "),n("a",{class:"header-anchor",href:"#单页隐藏","aria-label":'Permalink to "单页隐藏"'},"​")],-1)),a[8]||(a[8]=n("p",null,[t("通过 "),n("code",null,"hide-on-single-page"),t(" 来设置单页隐藏.")],-1)),e(s,null,{default:i(()=>[...a[2]||(a[2]=[n("l-code-preview",null,[n("textarea",{lang:"html"},`  <l-pagination total="10" hide-on-single-page></l-pagination>
`)],-1)])]),_:1}),a[9]||(a[9]=n("h3",{id:"简单分页",tabindex:"-1"},[t("简单分页 "),n("a",{class:"header-anchor",href:"#简单分页","aria-label":'Permalink to "简单分页"'},"​")],-1)),a[10]||(a[10]=n("p",null,"简单的分页，在空间有限的情况下，可以使用简单分页。",-1)),e(s,null,{default:i(()=>[...a[3]||(a[3]=[n("l-code-preview",null,[n("textarea",{lang:"html"},`  <l-pagination total="100" simple></l-pagination>
`)],-1)])]),_:1}),a[11]||(a[11]=l('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="pagination-attibutes" tabindex="-1">Pagination Attibutes <a class="header-anchor" href="#pagination-attibutes" aria-label="Permalink to &quot;Pagination Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>total</code></td><td>总条数</td><td><code>number</code></td><td><code>-</code></td></tr><tr><td><code>page-count</code></td><td>总页数</td><td><code>number</code></td><td><code>-</code></td></tr><tr><td><code>simple</code></td><td>简单分页</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>hide-on-single-page</code></td><td>单页隐藏</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>align</code></td><td>对齐方式</td><td><code>start</code>、<code>center</code>、<code>end</code></td><td><code>start</code></td></tr><tr><td><code>current</code></td><td>当前页</td><td><code>number</code></td><td><code>1</code></td></tr><tr><td><code>page-size</code></td><td>每页条数</td><td><code>number</code></td><td><code>10</code></td></tr></tbody></table><h3 id="pagination-slots" tabindex="-1">Pagination Slots <a class="header-anchor" href="#pagination-slots" aria-label="Permalink to &quot;Pagination Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>-</code></td><td>-</td></tr></tbody></table><h3 id="pagination-events" tabindex="-1">Pagination Events <a class="header-anchor" href="#pagination-events" aria-label="Permalink to &quot;Pagination Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>change</code></td><td>分页改变时触发, <code>detail:{current:number, pageSize:number, totalPage:nuber}</code></td><td><code>(event: CustomEvent)</code></td></tr></tbody></table><h3 id="pagination-methods" tabindex="-1">Pagination Methods <a class="header-anchor" href="#pagination-methods" aria-label="Permalink to &quot;Pagination Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>setCurrent</code></td><td>设置当前页</td><td><code>(current: number): void</code></td></tr></tbody></table><h3 id="pagination-css-variables" tabindex="-1">Pagination CSS Variables <a class="header-anchor" href="#pagination-css-variables" aria-label="Permalink to &quot;Pagination CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>-</td><td>-</td><td>-</td></tr></tbody></table>',11))])}const P=d(h,[["render",c]]);export{y as __pageData,P as default};
