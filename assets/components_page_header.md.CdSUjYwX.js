import{_ as i,C as l,c as s,o as h,ag as o,G as r,j as e,w as n,a}from"./chunks/framework._HD6XqYi.js";const P=JSON.parse('{"title":"PageHeader","description":"","frontmatter":{},"headers":[],"relativePath":"components/page_header.md","filePath":"components/page_header.md","lastUpdated":1753941375000}'),c={name:"components/page_header.md"};function p(g,t,b,u,m,k){const d=l("ClientOnly");return h(),s("div",null,[t[2]||(t[2]=o(`<h1 id="pageheader" tabindex="-1">PageHeader <a class="header-anchor" href="#pageheader" aria-label="Permalink to &quot;PageHeader&quot;">​</a></h1><p>用于页面的顶部，显示标题以及返回按钮。常用于二级、三级页面。</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { regist, PageHeader, Button, ArrowLeftIcon } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PageHeader);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([Button, ArrowLeftIcon]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果需要显示返回按钮</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>通过 <code>title-align</code> 属性设置标题的对齐方式。分为：<code>left</code>、<code>center</code>。默认为: <code>left</code></p>`,7)),r(d,null,{default:n(()=>[...t[0]||(t[0]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-page-header page-title="标题" page-sub-title="副标题" show-right>
    <l-more-icon slot="right"></l-more-icon>
  </l-page-header>
  <hr/>
  <l-page-header page-title="标题" align="center" show-right height="44px" border>
    <l-more-icon slot="right" data-action="more"></l-more-icon>
  </l-page-header>
`)],-1)])]),_:1}),t[3]||(t[3]=e("h3",{id:"监听事件",tabindex:"-1"},[a("监听事件 "),e("a",{class:"header-anchor",href:"#监听事件","aria-label":'Permalink to "监听事件"'},"​")],-1)),t[4]||(t[4]=e("p",null,[a("通过监听 "),e("code",null,"page-header"),a(" 的 "),e("code",null,"action"),a(" 事件, 然后给任何子节点添加 "),e("code",null,"l-action"),a(" 属性, 点击子节点会自动触发 "),e("code",null,"action"),a(" 事件。")],-1)),r(d,null,{default:n(()=>[...t[1]||(t[1]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-page-header page-title="标题" page-sub-title="副标题" show-right>
    <l-more-icon slot="right" l-action="more"></l-more-icon>
  </l-page-header>
`),e("div",{class:"source"},[e("textarea",{lang:"html"},`  <l-page-header id="header" page-title="标题" page-sub-title="副标题" show-right>
    <l-more-icon slot="right" l-action="more" data-param="1"></l-more-icon>
  </l-page-header>
`),e("textarea",{lang:"js"},`  const header = document.getElementById("header");
  header.addEventListener("action", (e) => {
    const detail = e.detail;
    if (detail.action === 'back') {
      // 点击了返回按钮
    } else if (detail.action === 'more') {
      console.log(detail.param); // 1
    }
  });
`)])],-1)])]),_:1}),t[5]||(t[5]=o('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="pageheader-attibutes" tabindex="-1">PageHeader Attibutes <a class="header-anchor" href="#pageheader-attibutes" aria-label="Permalink to &quot;PageHeader Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>show-left</code></td><td>是否显示左边区域</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>show-right</code></td><td>是否显示右边区域</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>height</code></td><td>高度</td><td><code>string</code></td><td>-</td></tr><tr><td><code>border</code></td><td>是否显示底部边框</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>align</code></td><td>标题对齐方式</td><td><code>left</code>、<code>center</code></td><td><code>left</code></td></tr><tr><td><code>show-back</code></td><td>是否显示返回按钮</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>back-text</code></td><td>返回按钮文本</td><td><code>string</code></td><td>返回</td></tr><tr><td><code>page-title</code></td><td>标题</td><td><code>string</code></td><td>-</td></tr><tr><td><code>page-sub-title</code></td><td>副标题</td><td><code>string</code></td><td>-</td></tr></tbody></table><h3 id="pageheader-slots" tabindex="-1">PageHeader Slots <a class="header-anchor" href="#pageheader-slots" aria-label="Permalink to &quot;PageHeader Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>default</code></td><td>标题内容</td></tr><tr><td><code>left</code></td><td>左边区域内容</td></tr><tr><td><code>right</code></td><td>右边区域内容</td></tr></tbody></table><h3 id="pageheader-events" tabindex="-1">PageHeader Events <a class="header-anchor" href="#pageheader-events" aria-label="Permalink to &quot;PageHeader Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击按钮时触发</td><td><code>(event: Event)</code></td></tr><tr><td><code>action</code></td><td>点击子节点时触发, 子节点需要添加 <code>l-action</code> 属性, 通过 <code>event.detail</code> 获取 <code>acton</code> 以及 <code>dataset</code></td><td><code>(event: CustomEvent)</code></td></tr></tbody></table><h3 id="pageheader-methods" tabindex="-1">PageHeader Methods <a class="header-anchor" href="#pageheader-methods" aria-label="Permalink to &quot;PageHeader Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>-</td><td>-</td><td>-</td></tr></tbody></table><h3 id="pageheader-css-variables" tabindex="-1">PageHeader CSS Variables <a class="header-anchor" href="#pageheader-css-variables" aria-label="Permalink to &quot;PageHeader CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>-</td><td>-</td><td>-</td></tr></tbody></table>',11))])}const _=i(c,[["render",p]]);export{P as __pageData,_ as default};
