import{_ as d,C as h,c as i,o as r,ag as n,G as o,j as t,w as s,a}from"./chunks/framework.BCyZWppQ.js";const f=JSON.parse('{"title":"Checkbox 复选框","description":"","frontmatter":{},"headers":[],"relativePath":"components/checkbox.md","filePath":"components/checkbox.md","lastUpdated":1737014466000}'),c={name:"components/checkbox.md"};function b(k,e,p,x,u,m){const l=h("ClientOnly");return r(),i("div",null,[e[3]||(e[3]=n(`<h1 id="checkbox-复选框" tabindex="-1">Checkbox 复选框 <a class="header-anchor" href="#checkbox-复选框" aria-label="Permalink to &quot;Checkbox 复选框&quot;">​</a></h1><p>在一组备选项中进行多选。适用提醒用户勾选场景，突出多选框选项，可以有效增加用户识别度。</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Checkbox, regist } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([Checkbox]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>使用当只有一个选项时，可以直接 <code>checked</code> 绑定 <code>boolean</code> 值来控制是否选中；使用 <code>slot-label</code> 来重写选项的文字。</p>`,7)),o(l,null,{default:s(()=>e[0]||(e[0]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-checkbox>
    <span slot="label">
      <span>同意</span>
      <a href='#'>隐私协议</a>
    </span>
  </l-checkbox>
`)],-1)])),_:1}),e[4]||(e[4]=t("h3",{id:"禁用状态",tabindex:"-1"},[a("禁用状态 "),t("a",{class:"header-anchor",href:"#禁用状态","aria-label":'Permalink to "禁用状态"'},"​")],-1)),e[5]||(e[5]=t("p",null,[a("使用 "),t("code",null,"disabled"),a(" 属性来禁用复选框。")],-1)),o(l,null,{default:s(()=>e[1]||(e[1]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-checkbox label="禁用" disabled>
  </l-checkbox>
`)],-1)])),_:1}),e[6]||(e[6]=t("h3",{id:"多选框组",tabindex:"-1"},[a("多选框组 "),t("a",{class:"header-anchor",href:"#多选框组","aria-label":'Permalink to "多选框组"'},"​")],-1)),e[7]||(e[7]=t("p",null,[a("通过 "),t("code",null,"slot-default"),a(" 然后给每一项设置一个 "),t("code",null,"check-value"),a(" 来配置单选框组每一项; 可以通过 "),t("code",null,"part"),a(" 来修改样式")],-1)),o(l,null,{default:s(()=>e[2]||(e[2]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-checkbox value="CD&BJ">
    <span check-value="CD">成都</span>
    <span check-value="BJ">北京</span>
    <span check-value="SZ">深圳</span>
    <span check-value="HZ">杭州</span>
  </l-checkbox>
`)],-1)])),_:1}),e[8]||(e[8]=n('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="checkbox-attibutes" tabindex="-1">Checkbox Attibutes <a class="header-anchor" href="#checkbox-attibutes" aria-label="Permalink to &quot;Checkbox Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>x</td><td>x</td><td>x</td><td>x</td></tr></tbody></table><h3 id="checkbox-slots" tabindex="-1">Checkbox Slots <a class="header-anchor" href="#checkbox-slots" aria-label="Permalink to &quot;Checkbox Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>default</code></td><td>内容</td></tr></tbody></table><h3 id="checkbox-events" tabindex="-1">Checkbox Events <a class="header-anchor" href="#checkbox-events" aria-label="Permalink to &quot;Checkbox Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击按钮时触发</td><td><code>(event: Event)</code></td></tr></tbody></table><h3 id="checkbox-methods" tabindex="-1">Checkbox Methods <a class="header-anchor" href="#checkbox-methods" aria-label="Permalink to &quot;Checkbox Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>x</code></td><td>x</td><td><code>(x: number): string</code></td></tr></tbody></table><h3 id="checkbox-css-variables" tabindex="-1">Checkbox CSS Variables <a class="header-anchor" href="#checkbox-css-variables" aria-label="Permalink to &quot;Checkbox CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td><code>--l</code></td><td>x</td><td><code>#fff</code></td></tr></tbody></table>',11))])}const v=d(c,[["render",b]]);export{f as __pageData,v as default};
