import{b as k,i as m,o as g,a as f}from"./chunks/dom.DBNJew1L.js";import{v as E,P as _,x as S,C as v,c as x,o as y,ag as d,G as n,j as t,w as o,a as q}from"./chunks/framework._HD6XqYi.js";const w=JSON.parse('{"title":"Select 选择器","description":"","frontmatter":{},"headers":[],"relativePath":"components/select.md","filePath":"components/select.md","lastUpdated":1756103824000}'),T={name:"components/select.md"},F=Object.assign(T,{setup(A){const c=["苹果","香蕉","橙子","葡萄","柠檬","草莓","樱桃","芒果","猕猴桃","杨梅","菠萝","西瓜","哈密瓜","桃子","梨","柿子","榴莲","椰子","龙眼","荔枝"],h=c.map((a,e)=>({value:e,label:a}));let l;function p(a,e){return e.label.includes(a)||e.value==a}function r(a){const e=a.target;e.loading||(e.loading=!0,setTimeout(()=>{const s=a.detail.value,u=c.filter(i=>i.includes(s)).map((i,b)=>({value:b,label:i}));e.setOptions(u),e.loading=!1},1500))}return E(()=>{_(()=>{l=k("l-select"),l&&l.length>0&&(m(l,a=>{a.setOptions(h)}),l[0].value=0,l[7].setFilter(p),l[8].setOptions([]),g(l[8],"search",r))})}),S(()=>{l&&l.length>0&&f(l[8],"search",r),l=null}),(a,e)=>{const s=v("ClientOnly");return y(),x("div",null,[e[6]||(e[6]=d(`<h1 id="select-选择器" tabindex="-1">Select 选择器 <a class="header-anchor" href="#select-选择器" aria-label="Permalink to &quot;Select 选择器&quot;">​</a></h1><p>下拉选择器</p><ul><li>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器</li><li>选项过多时，使用下拉菜单展示并选择内容</li></ul><blockquote><p><code>l-select</code> 的默认宽度更改为 <code>100%</code> 当使用内联形式时，宽度将显示异常。为了保持显示正常, 您需要手动配置 <code>l-select</code> 的宽度</p></blockquote><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  regist,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Select,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ArrowDownIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Tag,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  CloseIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  LoadingIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  CloseFilledIcon,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui/styles/select.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([Select, ArrowDownIcon]);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// multiple</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([Tag, CloseIcon]);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// loading</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([LoadingIcon]);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// clearable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([CloseFilledIcon]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>通过 <code>setOptions()</code> 函数设置选项，可以通过 <code>.value</code> 获取或设置选中项[多选，设置为数组]</p>`,9)),n(s,null,{default:o(()=>[...e[0]||(e[0]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select></l-select>
`),t("div",{class:"source"},[t("textarea",{lang:"html"},`  <l-select id="select1"></l-select>
`),t("textarea",{lang:"js"},`  const $select1 = document.querySelector('#select1');
  $select1.setOptions([{value:0,label:'苹果'}, {value:1,label:'香蕉'}]);
  // 多选 $select1.value = [0, 1];
  $select1.value = 0;
`)])],-1)])]),_:1}),e[7]||(e[7]=d('<blockquote><ol><li>可以通过 <code>value-field</code> 和 <code>label-field</code> 属性设置选项的 <code>value</code> 和 <code>label</code> 字段</li><li>如果选中项是字符串，可以直接通过节点的 <code>value</code> 属性，设置选中值设置选中值[多选用 <code>,</code> 分隔]</li></ol></blockquote><h3 id="禁用" tabindex="-1">禁用 <a class="header-anchor" href="#禁用" aria-label="Permalink to &quot;禁用&quot;">​</a></h3><p>通过 <code>disabled</code> 属性设置禁用状态</p>',3)),n(s,null,{default:o(()=>[...e[1]||(e[1]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select disabled></l-select>
`)],-1)])]),_:1}),e[8]||(e[8]=d('<blockquote><p>也可以通过 <code>l-form-item</code> 或 <code>l-form-item</code> 组件的 <code>disabled</code> 属性设置禁用状态</p></blockquote><h3 id="多选用" tabindex="-1">多选用 <a class="header-anchor" href="#多选用" aria-label="Permalink to &quot;多选用&quot;">​</a></h3><p>设置 <code>multiple</code> 属性即可启用多选，默认情况下选中值会以 <code>Tag</code> 组件的形式展现， 你也可以设置 <code>collapse-tags</code> 属性将它们合并为一段文字。</p>',3)),n(s,null,{default:o(()=>[...e[2]||(e[2]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select multiple width="180px"></l-select>
  <l-select multiple collapse-tags width="180px"></l-select>
`)],-1)])]),_:1}),e[9]||(e[9]=t("h3",{id:"可清空",tabindex:"-1"},[q("可清空 "),t("a",{class:"header-anchor",href:"#可清空","aria-label":'Permalink to "可清空"'},"​")],-1)),e[10]||(e[10]=t("p",null,"设置 clearable 属性，则可将选择器清空。",-1)),n(s,null,{default:o(()=>[...e[3]||(e[3]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select clearable width="180px"></l-select>
  <l-select multiple collapse-tags clearable width="180px"></l-select>
`)],-1)])]),_:1}),e[11]||(e[11]=d('<h3 id="过滤选项" tabindex="-1">过滤选项 <a class="header-anchor" href="#过滤选项" aria-label="Permalink to &quot;过滤选项&quot;">​</a></h3><p>可以利用过滤功能快速查找选项。</p><p>为 <code>l-select</code> 添加 <code>filterable</code> 属性即可启用搜索功能。 默认情况下，<code>Select</code> 会找出所有 <code>label</code> 属性包含输入值的选项。 如果希望使用其他的搜索逻辑，可以通过 <code>setFilter()</code> 传入一个 <code>filter</code> 函数来实现。 <code>filter</code> 为一个 <code>Function</code>，它会在输入值发生变化时调用，参数为当前输入值以及当前选项，返回值为 <code>boolean</code> 表明当前选项是否符合过滤。</p>',3)),n(s,null,{default:o(()=>[...e[4]||(e[4]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select filterable width="180px"></l-select>
  <l-select multiple filterable width="180px"></l-select>
`),t("div",{class:"source"},[t("textarea",{lang:"html"},`  <l-select filterable width="180px"></l-select>
  <l-select id="select2" multiple filterable width="180px"></l-select>
`),t("textarea",{lang:"js"},`  const $select2 = document.querySelector('#select2');
  $select2.setOptions([{value:0,label:'苹果'}, {value:1,label:'香蕉'}]);
  //-
  function filter(match, option) {
    return option.label.includes(match) || option.value == match;
  }
  //-
  $select2.setFilter(filter);
`)])],-1)])]),_:1}),e[12]||(e[12]=d('<h3 id="远程搜索" tabindex="-1">远程搜索 <a class="header-anchor" href="#远程搜索" aria-label="Permalink to &quot;远程搜索&quot;">​</a></h3><p>搜索框和远程数据结合，输入关键字以从远程服务器中查找数据。</p><p>为了启用远程搜索，需要将 <code>filterable</code> 和 <code>remote</code> 同时设置为 <code>true</code>，同时监听 <code>search</code> 事件，事件参数为输入的值, 可以在事件中搜索远程结果，并重新更新 <code>options</code> 选项；可以在搜索的过程中设置 <code>loading</code> 为 <code>true</code> 来显示加载状态。</p>',3)),n(s,null,{default:o(()=>[...e[5]||(e[5]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-select multiple filterable remote width="180px"></l-select>
`),t("div",{class:"source"},[t("textarea",{lang:"html"},`  <l-select id="select3" multiple filterable remote width="180px"></l-select>
`),t("textarea",{lang:"js"},`  const fruits = ["苹果", "香蕉", "橙子", "葡萄", "柠檬", "草莓", "樱桃", "芒果", "猕猴桃", "杨梅", "菠萝", "西瓜", "哈密瓜", "桃子", "梨", "柿子", "榴莲", "椰子", "龙眼", "荔枝"];
  const $select = document.querySelector('#select3');
  //-
  function handleSearch(e) {
    const $target = e.target;
    if ($target.loading) return;
    $target.loading = true;
    // 也可以通过属性设置 loading
    // $target.setAttribute('loading', 'on');
    const searchValue = e.detail.value;
    // 模拟请求
    setTimeout(() => {
      const options = fruits.filter((item) => {
        return item.includes(searchValue);
      }).map((item, index) => {
        return { value: index, label: item }
      });
      $target.setOptions(options);
      $target.loading = false;
      // $target.setAttribute('loading', 'off');
    }, 1500);
  }
  //-
  $select.addEventListener('search', handleSearch);
  // $select.removeEventListener('search', handleSearch);
`)])],-1)])]),_:1}),e[13]||(e[13]=d('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="select-attibutes" tabindex="-1">Select Attibutes <a class="header-anchor" href="#select-attibutes" aria-label="Permalink to &quot;Select Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>value</code></td><td>选中项绑定值</td><td><code>string、number、array</code></td><td>-</td></tr><tr><td><code>placeholder</code></td><td>占位符</td><td><code>string</code></td><td>请选择</td></tr><tr><td><code>disabled</code></td><td>是否禁用</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>label-field</code></td><td>选项 <code>label</code> 的字段名</td><td><code>string</code></td><td><code>label</code></td></tr><tr><td><code>value-field</code></td><td>选项 <code>value</code> 的字段名</td><td><code>string</code></td><td><code>value</code></td></tr><tr><td><code>options</code></td><td>配置选项内容</td><td><code>SelectOption[]</code></td><td>-</td></tr><tr><td><code>multiple</code></td><td>是否多选</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>collapse-tags</code></td><td>多选时是否将选中值按文字的形式展示</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>clearable</code></td><td>是否可清空</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>filterable</code></td><td>是否启用过滤</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>filter</code></td><td>自定义的过滤函数</td><td><code>(match: string, option: SelectOption) =&gt; boolean</code></td><td>-</td></tr><tr><td><code>remote</code></td><td>是否启用远程搜索</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>loading</code></td><td>是否为加载状态, 通常为远程搜索时使用</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>width</code></td><td>宽度</td><td><code>string</code></td><td><code>100%</code></td></tr></tbody></table><h3 id="select-slots" tabindex="-1">Select Slots <a class="header-anchor" href="#select-slots" aria-label="Permalink to &quot;Select Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>default</code></td><td>内容</td></tr></tbody></table><h3 id="select-events" tabindex="-1">Select Events <a class="header-anchor" href="#select-events" aria-label="Permalink to &quot;Select Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>search</code></td><td>搜索时触发, <code>e.detail.value</code> 为搜索内容</td><td><code>(e: CustomEvent)</code></td></tr></tbody></table><h3 id="select-methods" tabindex="-1">Select Methods <a class="header-anchor" href="#select-methods" aria-label="Permalink to &quot;Select Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>setOptions(options: SelectOption[])</code></td><td>设置选项</td></tr><tr><td><code>setFilter(filter: (match: string, option: SelectOption) =&gt; boolean)</code></td><td>设置自定义过滤函数</td></tr></tbody></table><h3 id="selectoption" tabindex="-1">SelectOption <a class="header-anchor" href="#selectoption" aria-label="Permalink to &quot;SelectOption&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>value</code></td><td>选项的值</td><td><code>string、number</code></td><td>-</td></tr><tr><td><code>label</code></td><td>选项的标签</td><td><code>string</code></td><td>-</td></tr></tbody></table><h3 id="select-css-variables" tabindex="-1">Select CSS Variables <a class="header-anchor" href="#select-css-variables" aria-label="Permalink to &quot;Select CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>-</td><td>-</td><td>-</td></tr></tbody></table>',13))])}}});export{w as __pageData,F as default};
