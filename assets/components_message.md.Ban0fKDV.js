import{e as m,i as p,o as b}from"./chunks/dom.DNZbcrqS.js";import{M as h}from"./chunks/index.Dhssnn3s.js";import{v as _,P as k,x as f,C as M,c as y,o as x,ag as n,G as i,j as t,w as r,a as s}from"./chunks/framework.DaU-16c2.js";import"./chunks/index.DXEE3QqF.js";import"./chunks/index.DZ7iFm8i.js";import"./chunks/info.B9bXH8NL.js";const S=JSON.parse('{"title":"Message 消息提示","description":"","frontmatter":{},"headers":[],"relativePath":"components/message.md","filePath":"components/message.md","lastUpdated":1737345140000}'),q={name:"components/message.md"},O=Object.assign(q,{setup(v){let o,l;function c(a){const e=a.target,d=e.getAttribute("data-message"),u=e.getAttribute("data-type")||"info",g=e.getAttribute("data-duration")||3e3;u!=="close"?l=h.show({message:d,type:u,duration:Number(g)}):h.close(l)}return _(()=>{k(()=>{o=m(".preview-container l-button"),p(o,a=>{b(a,"click",c)})})}),f(()=>{o&&p(o,a=>{a.removeEventListener("click",c)})}),(a,e)=>{const d=M("ClientOnly");return x(),y("div",null,[e[3]||(e[3]=n(`<h1 id="message-消息提示" tabindex="-1">Message 消息提示 <a class="header-anchor" href="#message-消息提示" aria-label="Permalink to &quot;Message 消息提示&quot;">​</a></h1><p>常用于主动操作后的反馈提示。更多用于系统级通知的被动提醒。</p><h2 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Message } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui/styles/message.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><h3 id="显示信息" tabindex="-1">显示信息 <a class="header-anchor" href="#显示信息" aria-label="Permalink to &quot;显示信息&quot;">​</a></h3><p>从顶部出现，<code>3</code> 秒后自动消失; 可以接收一个字符串被显示为正文内容</p>`,7)),i(d,null,{default:r(()=>e[0]||(e[0]=[t("l-code-preview",null,[t("textarea",null,`<l-button data-message="这是一条普通的提示信息">显示消息</l-button>
`),t("div",{class:"source"},[t("textarea",{lang:"html"},`  <l-button text>显示消息</l-button>
`),t("textarea",{lang:"js"},`  import { Message } from 'litos-ui';
  import { elem, on } from 'ph-utils/dom';
  //-
  on(elem('l-button')[0], 'click', () => {
    Message.show({ message: '这是一条普通的提示信息' });
  });
`)])],-1)])),_:1,__:[0]}),e[4]||(e[4]=n('<h3 id="不同状态" tabindex="-1">不同状态 <a class="header-anchor" href="#不同状态" aria-label="Permalink to &quot;不同状态&quot;">​</a></h3><p>用来显示「成功、警告、消息、错误」类的操作反馈。</p><p>当需要自定义更多属性时，<code>Message</code> 也可以接收一个对象为参数。 比如，设置 <code>type</code> 字段可以定义不同的状态，默认为 <code>info</code> 。 此时正文内容以 <code>message</code> 的值传入。 同时，也为 <code>Message</code> 的各种 <code>type</code> 注册了方法，可以在不传入 <code>type</code> 字段的情况下, 直接调用指定类型的函数, 例如: <code>Message.info(&#39;x&#39;)</code>。</p>',3)),i(d,null,{default:r(()=>e[1]||(e[1]=[t("l-code-preview",null,[t("textarea",null,`  <l-button data-message="提示消息" data-type="info">提示消息</l-button>
  <l-button data-message="成功消息" data-type="success">成功消息</l-button>
  <l-button data-message="警告消息" data-type="warn">警告消息</l-button>
  <l-button data-message="错误消息" data-type="error">错误消息</l-button>
`),t("div",{class:"source"},[t("textarea",{lang:"js"},`  import { Message } from 'litos-ui';
  //-
  Message.info("提示消息");
  Message.success("成功消息");
  Message.warn("警告消息");
  Message.error("错误消息");
`)])],-1)])),_:1,__:[1]}),e[5]||(e[5]=t("h3",{id:"手动关闭",tabindex:"-1"},[s("手动关闭 "),t("a",{class:"header-anchor",href:"#手动关闭","aria-label":'Permalink to "手动关闭"'},"​")],-1)),e[6]||(e[6]=t("p",null,[s("将 "),t("code",null,"duration"),s(" 属性设置为 "),t("code",null,"0"),s(", 可以使 "),t("code",null,"Message"),s(" 不自动消失。然后显示消息的函数会返回一个消息 "),t("code",null,"id"),s(", 通过手动调用 close 手动关闭")],-1)),i(d,null,{default:r(()=>e[2]||(e[2]=[t("l-code-preview",null,[t("textarea",null,`  <l-button data-message="这是一条手动关闭的提示信息" data-duration="0">打开</l-button>
  <l-button data-type="close">关闭</l-button>
`),t("div",{class:"source"},[t("textarea",{lang:"js"},`  import { Message } from 'litos-ui';
  //-
  // 打开消息
  const id = Message.show({ 
    message: '这是一条手动关闭的提示信息', 
    type: 'info',
    duration: 0 
  });
  // 关闭消息
  Message.close(id);
`)])],-1)])),_:1,__:[2]}),e[7]||(e[7]=n('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>参数</th><th>说明</th><th>返回类型</th></tr></thead><tbody><tr><td><code>info</code></td><td><code>MessageOption</code></td><td>显示普通提示信息, 参数为配置项, 返回消息 <code>id</code></td><td><code>string</code></td></tr><tr><td><code>success</code></td><td><code>MessageOption</code></td><td>显示成功提示信息</td><td><code>string</code></td></tr><tr><td><code>warn</code></td><td><code>MessageOption</code></td><td>显示警告提示信息</td><td><code>string</code></td></tr><tr><td><code>error</code></td><td><code>MessageOption</code></td><td>显示错误提示信息</td><td><code>string</code></td></tr><tr><td><code>close</code></td><td><code>id: string</code></td><td>手动关闭消息</td><td>-</td></tr></tbody></table><h3 id="messageoption" tabindex="-1">MessageOption <a class="header-anchor" href="#messageoption" aria-label="Permalink to &quot;MessageOption&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>message</code></td><td><code>string</code></td><td>-</td><td>消息正文内容</td></tr><tr><td><code>duration</code></td><td><code>number</code></td><td><code>3000</code></td><td>消息显示的持续时间，单位为毫秒。如果设置为 <code>0</code>，则不会自动关闭</td></tr><tr><td><code>type</code></td><td><code>string</code></td><td><code>info</code></td><td>消息类型，可选值为 <code>success</code>、<code>warning</code>、<code>error</code>、<code>info</code></td></tr><tr><td><code>customClass</code></td><td><code>string</code></td><td>-</td><td>自定义类名</td></tr></tbody></table>',5))])}}});export{S as __pageData,O as default};
