import{$ as u}from"./chunks/dom.BepTD04X.js";import{v as p,P as h,C as c,c as b,o as m,ag as i,G as l,j as e,w as n,a}from"./chunks/framework.BCyZWppQ.js";const v=JSON.parse('{"title":"Input 输入框","description":"","frontmatter":{},"headers":[],"relativePath":"components/input.md","filePath":"components/input.md","lastUpdated":1744789039000}'),f={name:"components/input.md"},P=Object.assign(f,{setup(g){let r;function s(o){let t=parseInt(o,10);return Number.isNaN(t)?t="":t=Math.abs(t),String(t)}return p(()=>{h(()=>{r=u("#input"),r.addEventListener("change",function(o){console.log("input",o.target.value)}),r.setParser(s)})}),(o,t)=>{const d=c("ClientOnly");return m(),b("div",null,[t[6]||(t[6]=i(`<h1 id="input-输入框" tabindex="-1">Input 输入框 <a class="header-anchor" href="#input-输入框" aria-label="Permalink to &quot;Input 输入框&quot;">​</a></h1><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Input, regist } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Input);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>文本输入的基础用法。</p>`,6)),l(d,null,{default:n(()=>t[0]||(t[0]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input placeholder="请输入内容"></l-input>
`)],-1)])),_:1}),t[7]||(t[7]=e("h3",{id:"禁用状态",tabindex:"-1"},[a("禁用状态 "),e("a",{class:"header-anchor",href:"#禁用状态","aria-label":'Permalink to "禁用状态"'},"​")],-1)),t[8]||(t[8]=e("p",null,[a("通过 "),e("code",null,"disabled"),a(" 属性设置输入框为禁用状态。")],-1)),l(d,null,{default:n(()=>t[1]||(t[1]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input placeholder="请输入内容" disabled></l-input>
`)],-1)])),_:1}),t[9]||(t[9]=i('<h3 id="限制输入" tabindex="-1">限制输入 <a class="header-anchor" href="#限制输入" aria-label="Permalink to &quot;限制输入&quot;">​</a></h3><p>通过传递 <code>allow-input</code> 来限制输入的值。<code>integer</code> 只能输入正整数, <code>number</code> 只能输入正数；以 - 开头表明允许输入负数; 以 <code>.2</code> 结尾表明小数点后精度; 例如: <code>-number.4</code> 表明允许输入数字，且小数点后保留 <code>4</code> 位小数。</p>',2)),l(d,null,{default:n(()=>t[2]||(t[2]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input placeholder="只能输入正整数" allow-input="integer"></l-input>
  <l-input placeholder="只能输入整数" allow-input="-integer"></l-input>
  <l-input placeholder="输入数字,保留2位小数" allow-input="-number.2"></l-input>
`)],-1)])),_:1}),t[10]||(t[10]=e("h3",{id:"输入解析",tabindex:"-1"},[a("输入解析 "),e("a",{class:"header-anchor",href:"#输入解析","aria-label":'Permalink to "输入解析"'},"​")],-1)),t[11]||(t[11]=e("p",null,[a("通过 "),e("code",null,"setParser"),a(" 给节点设置自定义 "),e("code",null,"parser"),a(" 在接受到输入值的时候进行解析，例如：只允许输入正整数")],-1)),l(d,null,{default:n(()=>t[3]||(t[3]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input id="input" placeholder="请输入正整数" clearable></l-input>
`),e("div",{class:"source"},[e("textarea",{lang:"html"},`  <l-input id="input" placeholder="请输入正整数"></l-input>
`),e("textarea",{lang:"ts"},`  import { $one, on, off } from 'ph-utils/dom';
  //-
  function numericParse(value) {
    let val = parseInt(value, 10)
    if (Number.isNaN(val)) {
      val = ''
    } else {
      val = Math.abs(val)
    }
    return String(val);
  }
  //-
  const $input = $one('#input');
  $input.setParser(numericParse);
`)])],-1)])),_:1}),t[12]||(t[12]=e("h3",{id:"带图标的输入框",tabindex:"-1"},[a("带图标的输入框 "),e("a",{class:"header-anchor",href:"#带图标的输入框","aria-label":'Permalink to "带图标的输入框"'},"​")],-1)),t[13]||(t[13]=e("p",null,[a("要在输入框中添加图标，只需要使用 "),e("code",null,"prefix"),a(" 和 "),e("code",null,"suffix"),a(" 命名的插槽。")],-1)),l(d,null,{default:n(()=>t[4]||(t[4]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input placeholder="input something">
    <l-reduction-icon slot="prefix"></l-reduction-icon>
    <l-search-icon slot="suffix"></l-search-icon>
  </l-input>
`)],-1)])),_:1}),t[14]||(t[14]=e("h3",{id:"带清除图标",tabindex:"-1"},[a("带清除图标 "),e("a",{class:"header-anchor",href:"#带清除图标","aria-label":'Permalink to "带清除图标"'},"​")],-1)),t[15]||(t[15]=e("p",null,[a("使用 "),e("code",null,"clearable"),a(" 属性即可显示一个清除图标，点击图标删除所有内容。")],-1)),l(d,null,{default:n(()=>t[5]||(t[5]=[e("l-code-preview",null,[e("textarea",{lang:"html"},`  <l-input placeholder="input something" clearable></l-input>
`)],-1)])),_:1}),t[16]||(t[16]=i('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="input-attributes" tabindex="-1">Input Attributes <a class="header-anchor" href="#input-attributes" aria-label="Permalink to &quot;Input Attributes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>html-type</code></td><td>原始的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input#input_%E7%B1%BB%E5%9E%8B" target="_blank" rel="noreferrer">type</a></td><td><code>string</code></td><td><code>text</code></td></tr><tr><td><code>placeholder</code></td><td>占位文本</td><td><code>string</code></td><td>-</td></tr><tr><td><code>allow-input</code></td><td>允许输入的值; <code>number</code>、<code>integer</code>,前面包含 <code>-</code> 表明允许负数, 以 <code>.2</code> 结尾表明小数点后精度</td><td><code>string</code></td><td>-</td></tr><tr><td><code>block</code></td><td>宽度是否铺满父元素</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>width</code></td><td>宽度</td><td><code>string</code></td><td>-</td></tr><tr><td><code>autofocus</code></td><td>原生属性，自动获取焦点</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>clearable</code></td><td>是否显示清除按钮</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table><h3 id="input-methods" tabindex="-1">Input Methods <a class="header-anchor" href="#input-methods" aria-label="Permalink to &quot;Input Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>setParser</code></td><td>设置输入解析</td><td><code>(parser: (val: string) =&gt; string): void</code></td></tr><tr><td><code>focus</code></td><td>聚焦</td><td><code>(): void</code></td></tr></tbody></table><h3 id="input-slots" tabindex="-1">Input Slots <a class="header-anchor" href="#input-slots" aria-label="Permalink to &quot;Input Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>default</code></td><td>内容</td></tr><tr><td><code>prefix</code></td><td>前缀图标</td></tr><tr><td><code>suffix</code></td><td>后缀图标</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>--l-btn-text-color</code></td><td>按钮的文字颜色</td><td><code>rgba(0, 0, 0, 0.65)</code></td></tr></tbody></table>',9))])}}});export{v as __pageData,P as default};
