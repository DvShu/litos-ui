import{i as d,o as u,$ as r,a as k}from"./chunks/dom.CBY_V37t.js";import{c as g}from"./chunks/index.BlcR5lE1.js";import{v as b,P as m,x as v,C as y,c as E,o as f,ag as p,G as e,j as i,w as l,a as n}from"./chunks/framework.BCyZWppQ.js";import"./chunks/index.DZ7iFm8i.js";const A=JSON.parse('{"title":"CSS Util","description":"","frontmatter":{},"headers":[],"relativePath":"css_util.md","filePath":"css_util.md","lastUpdated":1735551012000}'),_={name:"css_util.md"},S=Object.assign(_,{setup(C){const h=g();function c(t){const a=t.target.getAttribute("data-transition"),s=r(`[l-transition="${a}"]`);d(s,o=>{o.style.display==="none"?o.setAttribute("l-transition-emit","show"):o.setAttribute("l-transition-emit","hide")})}return b(()=>{m(()=>{h.init(),d(r("[data-transition]"),t=>{u(t,"click",c)})})}),v(()=>{h.destroy(),d(r("[data-transition]"),t=>{k(t,"click",c)})}),(t,a)=>{const s=y("ClientOnly");return f(),E("div",null,[a[5]||(a[5]=p('<h1 id="css-util" tabindex="-1">CSS Util <a class="header-anchor" href="#css-util" aria-label="Permalink to &quot;CSS Util&quot;">​</a></h1><p>提供一些常用的 <code>CSS</code> 工具类</p><h2 id="_1-transition-渐变" tabindex="-1">1. <code>Transition</code> 渐变 <a class="header-anchor" href="#_1-transition-渐变" aria-label="Permalink to &quot;1. `Transition` 渐变&quot;">​</a></h2><h3 id="_1-1-引入样式" tabindex="-1">1.1 引入样式 <a class="header-anchor" href="#_1-1-引入样式" aria-label="Permalink to &quot;1.1 引入样式&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui/styles/transition.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-2-使用" tabindex="-1">1.2 使用 <a class="header-anchor" href="#_1-2-使用" aria-label="Permalink to &quot;1.2 使用&quot;">​</a></h3><p>所有的渐变都支持传递 <code>--l-transition-times</code> 控制时长, 默认为 <code>0.3s</code>；添加相应的 <code>l-transition</code> 属性即可。然后执行 <code>transition.init()</code>, 详细文档 <a href="/litos-ui/components/transition">Transition渐变</a></p><h3 id="_1-3-示例" tabindex="-1">1.3 示例 <a class="header-anchor" href="#_1-3-示例" aria-label="Permalink to &quot;1.3 示例&quot;">​</a></h3><ol><li><code>l-opacity</code></li></ol><p>普通渐变进入/退出</p>',10)),e(s,null,{default:l(()=>a[0]||(a[0]=[i("l-code-preview",null,[i("textarea",{lang:"html"},`  <l-button data-transition="l-opacity">Toggle</l-button>
  <span l-transition="l-opacity" class="ml-10">Hello world</span>
`),i("div",{class:"source"},[i("textarea",{lang:"html"},`  <l-button id="toggle">Toggle</l-button>
  <span l-transition="l-opacity" class="ml-10">Hello world</span>
`),i("textarea",{lang:"js"},`  import { $one, on } from 'ph-utils/dom';
  //-
  on($one('#toggle'), 'click', (e) => {
    const $target = $one('[l-transition]');
    const display = $target.style.display;
    if (display === 'none') {
      $target.setAttribute('l-transition-emit', 'show');
    } else {
      $target.setAttribute('l-transition-emit', 'hide');
    }
  });
`)])],-1)])),_:1}),a[6]||(a[6]=i("ol",{start:"2"},[i("li",null,[i("code",null,"l-fadein")])],-1)),a[7]||(a[7]=i("p",null,[n("从顶部往下移动渐变的进入/退出; 支持通过 "),i("code",null,"--l-fadein-offset"),n(" 控制距离, 默认为 "),i("code",null,"-20px")],-1)),e(s,null,{default:l(()=>a[1]||(a[1]=[i("l-code-preview",null,[i("textarea",{lang:"html"},`  <l-button data-transition="l-fadein">Toggle</l-button>
  <div l-transition="l-fadein" class="ml-10 inline">Hello world</div>
  <div l-transition="l-fadein" class="ml-10 inline" style="--l-fadein-offset:-50px;">Hello world</div>
`),i("div",{class:"source"},[i("textarea",{lang:"html"},`  <l-button id="toggle">Toggle</l-button>
  <div l-transition="l-fadein" class="ml-10 inline">Hello world</div>
  <div l-transition="l-fadein" class="ml-10 inline" style="--l-fadein-offset:-50px;">Hello world</div>
`),i("textarea",{lang:"js"},`  import { $one, on } from 'ph-utils/dom';
  //-
  on($one('#toggle'), 'click', (e) => {
    const $target = $one('[l-transition]');
    const display = $target.style.display;
    if (display === 'none') {
      $target.setAttribute('l-transition-emit', 'show');
    } else {
      $target.setAttribute('l-transition-emit', 'hide');
    }
  });
`)])],-1)])),_:1}),a[8]||(a[8]=i("ol",{start:"3"},[i("li",null,[i("code",null,"l-scale")])],-1)),a[9]||(a[9]=i("p",null,"缩放进入/退出",-1)),e(s,null,{default:l(()=>a[2]||(a[2]=[i("l-code-preview",null,[i("textarea",{lang:"html"},`  <l-button data-transition="l-scale">Toggle</l-button>
  <div l-transition="l-scale" class="ml-10 inline">Hello world</div>
`),i("div",{class:"source"},[i("textarea",{lang:"html"},`  <l-button id="toggle">Toggle</l-button>
  <div l-transition="l-scale" class="ml-10 inline">Hello world</div>
`),i("textarea",{lang:"js"},`  import { $one, on } from 'ph-utils/dom';
  //-
  on($one('#toggle'), 'click', (e) => {
    const $target = $one('[l-transition]');
    const display = $target.style.display;
    if (display === 'none') {
      $target.setAttribute('l-transition-emit', 'show');
    } else {
      $target.setAttribute('l-transition-emit', 'hide');
    }
  });
`)])],-1)])),_:1}),a[10]||(a[10]=p('<blockquote><p>这些渐变效果也支持在 <code>vue</code> 中使用</p></blockquote><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Transition</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;l-opacity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-css-animation-动画" tabindex="-1">2. <code>CSS Animation</code> 动画 <a class="header-anchor" href="#_2-css-animation-动画" aria-label="Permalink to &quot;2. `CSS Animation` 动画&quot;">​</a></h2><h3 id="_2-1-引入样式" tabindex="-1">2.1 引入样式 <a class="header-anchor" href="#_2-1-引入样式" aria-label="Permalink to &quot;2.1 引入样式&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui/styles/animation.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-2-使用" tabindex="-1">2.2 使用 <a class="header-anchor" href="#_2-2-使用" aria-label="Permalink to &quot;2.2 使用&quot;">​</a></h3><p>可以直接通过动画名称，添加 <code>css class</code>、也可以通过 <code>css animation</code> 使用动画名称；例如：</p><ol><li>添加 <code>css class</code></li></ol><p>所有的动画的 <code>class</code> 规则为: <code>l-</code> + 动画名称 + <code>-anim</code>；例如旋转动画为: <code>l-rotate-anim</code></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">l-loading-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;l-rotate-anim&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">l-loading-icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过 <code>css animation</code> 使用动画名称</li></ol><p>所有的动画的 <code>animation</code> 名称规则为：<code>l-</code> + 动画名称 + <code>-frame</code>；例如旋转动画为: <code>l-rotate-frame</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-HiBnu" id="tab-FvA1a_7" checked><label data-title="html" for="tab-FvA1a_7">html</label><input type="radio" name="group-HiBnu" id="tab-o59Wyw_"><label data-title="css" for="tab-o59Wyw_">css</label></div><div class="blocks"><div class="language-html vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">l-loading-icon</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;custome-rotate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.custome-rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: l-rotate-frame </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> infinite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> linear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><p>内置动画有：<code>rotate</code> 旋转</p><h2 id="_3-滚动条样式" tabindex="-1">3. 滚动条样式 <a class="header-anchor" href="#_3-滚动条样式" aria-label="Permalink to &quot;3. 滚动条样式&quot;">​</a></h2><p>如果觉得默认滚动条不好看，想修改滚动条样式</p><h3 id="_3-1-引入样式" tabindex="-1">3.1 引入样式 <a class="header-anchor" href="#_3-1-引入样式" aria-label="Permalink to &quot;3.1 引入样式&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui/styles/scrollbar.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-2-使用" tabindex="-1">3.2 使用 <a class="header-anchor" href="#_3-2-使用" aria-label="Permalink to &quot;3.2 使用&quot;">​</a></h3><p>只需要在滚动容器添加 <code>l-scrollbar</code> 类即可</p>',20)),e(s,null,{default:l(()=>a[3]||(a[3]=[i("l-code-preview",null,[i("textarea",{lang:"html"},`  <div class="l-scrollbar" style="width:100%;height:80px;border:1px solid #dedede;overflow:auto;">
    <div style="width:150%;height:150px;">ScrollBar</div>
  </div>
`)],-1)])),_:1}),a[11]||(a[11]=i("h3",{id:"_3-3-更改滚动条颜色以及大小",tabindex:"-1"},[n("3.3 更改滚动条颜色以及大小 "),i("a",{class:"header-anchor",href:"#_3-3-更改滚动条颜色以及大小","aria-label":'Permalink to "3.3 更改滚动条颜色以及大小"'},"​")],-1)),a[12]||(a[12]=i("p",null,[n("通过使用下面表格中的 "),i("code",null,"CSS"),n(" 变量，可以更改滚动条的颜色以及大小")],-1)),e(s,null,{default:l(()=>a[4]||(a[4]=[i("l-code-preview",null,[i("textarea",{lang:"html"},`  <div class="l-scrollbar" style="--l-scrollbar-bg:orange;--l-scrollbar-hover:red;--l-scrollbar-size:8px;width:100%;height:80px;border:1px solid #dedede;overflow:auto;">
    <div style="width:150%;height:150px;">ScrollBar</div>
  </div>
`)],-1)])),_:1}),a[13]||(a[13]=p('<h3 id="_3-4-样式变量" tabindex="-1">3.4 样式变量 <a class="header-anchor" href="#_3-4-样式变量" aria-label="Permalink to &quot;3.4 样式变量&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>--l-scrollbar-bg</code></td><td><code>#d9d9d9</code></td><td>滚动条背景色</td></tr><tr><td><code>--l-scrollbar-hover</code></td><td><code>#bfbfbf</code></td><td>鼠标悬浮时滑块颜色</td></tr><tr><td><code>--l-scrollbar-size</code></td><td><code>10px</code></td><td>滑块尺寸, 水平滚动条时为高度，垂直时为宽度</td></tr></tbody></table>',2))])}}});export{A as __pageData,S as default};
