import{$ as s,o as p,a as h}from"./chunks/dom.BOGGfM8s.js";import{v as k,P as u,x as m,C as b,c as g,o as _,ag as o,G as i,j as t,w as c,a as r}from"./chunks/framework.BCyZWppQ.js";const y=JSON.parse('{"title":"DatePicker","description":"","frontmatter":{},"headers":[],"relativePath":"components/date_picker.md","filePath":"components/date_picker.md","lastUpdated":1743672472000}'),f={name:"components/date_picker.md"},q=Object.assign(f,{setup(v){let d;function l(n){console.log(n)}return k(()=>{u(()=>{d=s("#picker"),p(d,"change",l)})}),m(()=>{d&&h(d,"change",l)}),(n,e)=>{const a=b("ClientOnly");return _(),g("div",null,[e[3]||(e[3]=o(`<h1 id="datepicker" tabindex="-1">DatePicker <a class="header-anchor" href="#datepicker" aria-label="Permalink to &quot;DatePicker&quot;">​</a></h1><p>基于原生 <code>input</code> 封装的输入或选择日期的控件。</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DatePicker, regist } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DatePicker);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>通过 <code>type</code> 属性指定类型，<code>date</code>、<code>datetime-local</code>、<code>time</code>、<code>month</code>、<code>week</code>。<code>value</code> 设置初始值。</p>`,7)),i(a,null,{default:c(()=>e[0]||(e[0]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-date-picker value="2025-04-02"></l-date-picker>
  <l-date-picker type="datetime-local" value="2025-05-02 17:00"></l-date-picker>
  <l-date-picker type="time" value="17:00"></l-date-picker>
  <l-date-picker type="month"></l-date-picker>
  <l-date-picker type="week"></l-date-picker>
`),t("div",{class:"source"},[t("textarea",{lang:"html"},`  <l-date-picker value="2025-04-02"></l-date-picker>
  <l-date-picker type="datetime-local" value="2025-05-02 17:00"></l-date-picker>
  <l-date-picker type="time" value="17:00"></l-date-picker>
  <l-date-picker type="month"></l-date-picker>
  <l-date-picker type="week"></l-date-picker>
`),t("textarea",{lang:"js"},`  import { on, $ } from 'ph-utils/dom';
  //-
  const $pickers = $('l-date-picker');
  on($pickers, 'change', (e) => {
    // { value: string, dateStr: string[], dates: Date[] }
    const detail = e.detail;
  });
`)])],-1)])),_:1}),e[4]||(e[4]=o('<blockquote><p>注意使用 <code>month</code>、<code>week</code> 时需要考虑兼容性</p></blockquote><h3 id="限定日期范围" tabindex="-1">限定日期范围 <a class="header-anchor" href="#限定日期范围" aria-label="Permalink to &quot;限定日期范围&quot;">​</a></h3><p>通过 <code>min</code> 和 <code>max</code> 限定日期范围。</p>',3)),i(a,null,{default:c(()=>e[1]||(e[1]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-date-picker min="2025-04-01" max="2025-04-30"></l-date-picker>
`)],-1)])),_:1}),e[5]||(e[5]=t("h3",{id:"范围选择器",tabindex:"-1"},[r("范围选择器 "),t("a",{class:"header-anchor",href:"#范围选择器","aria-label":'Permalink to "范围选择器"'},"​")],-1)),e[6]||(e[6]=t("p",null,[r("通过 "),t("code",null,"range"),r(" 属性开启范围选择。")],-1)),i(a,null,{default:c(()=>e[2]||(e[2]=[t("l-code-preview",null,[t("textarea",{lang:"html"},`  <l-date-picker range min="2025-04-01" max="2025-04-15" allow-empty="off" id="picker"></l-date-picker>
`)],-1)])),_:1}),e[7]||(e[7]=o('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="datepicker-attibutes" tabindex="-1">DatePicker Attibutes <a class="header-anchor" href="#datepicker-attibutes" aria-label="Permalink to &quot;DatePicker Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>value</code></td><td>初始值, 如果是范围选择，则逗号分隔开始结束日期, 例如: <code>2025-04-01,2025-04-15</code></td><td><code>string</code></td><td><code>-</code></td></tr><tr><td><code>min</code></td><td>最小日期</td><td><code>string</code></td><td><code>-</code></td></tr><tr><td><code>max</code></td><td>最大日期</td><td><code>string</code></td><td><code>-</code></td></tr><tr><td><code>type</code></td><td>类型, 可选值: <code>date</code>、<code>datetime-local</code>、<code>time</code>、<code>month</code>、<code>week</code></td><td><code>string</code></td><td><code>date</code></td></tr><tr><td><code>range</code></td><td>是否开启范围选择</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>allow-empty</code></td><td>是否允许空值, 设置为 <code>false</code> 时如果为空会赋值初始值</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td><code>disabled</code></td><td>是否禁用</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>width</code></td><td>宽度</td><td><code>string</code></td><td><code>-</code></td></tr><tr><td><code>emit-timeout</code></td><td>触发 <code>change</code> 事件时延时, 在范围选择时有效；为了性能考虑, 立即改变一个日期后，会延迟 <code>300ms</code> 通知, 以响应其它选择器, <code>0</code> - 立即触发</td><td><code>number</code></td><td><code>number</code></td></tr></tbody></table><h3 id="datepicker-events" tabindex="-1">DatePicker Events <a class="header-anchor" href="#datepicker-events" aria-label="Permalink to &quot;DatePicker Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>change</code></td><td>日期改变时触发, 通过 <code>event.detail</code> 可以获取到当前值</td><td><code>(event: CustomEvent)</code></td></tr></tbody></table><h3 id="datepicker-css-variables" tabindex="-1">DatePicker CSS Variables <a class="header-anchor" href="#datepicker-css-variables" aria-label="Permalink to &quot;DatePicker CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td><code>--l</code></td><td>x</td><td><code>#fff</code></td></tr></tbody></table>',7))])}}});export{y as __pageData,q as default};
