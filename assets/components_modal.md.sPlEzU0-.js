import{_ as o,C as l,c as s,o as i,ag as e,G as n,w as r,j as a}from"./chunks/framework.BCyZWppQ.js";const x=JSON.parse('{"title":"Modal 对话框","description":"","frontmatter":{},"headers":[],"relativePath":"components/modal.md","filePath":"components/modal.md","lastUpdated":1742404665000}'),h={name:"components/modal.md"};function c(b,t,p,m,u,k){const d=l("ClientOnly");return i(),s("div",null,[t[1]||(t[1]=e(`<h1 id="modal-对话框" tabindex="-1">Modal 对话框 <a class="header-anchor" href="#modal-对话框" aria-label="Permalink to &quot;Modal 对话框&quot;">​</a></h1><p>在保留当前页面状态的情况下，弹出一个对话框告知用户并承载相关操作，包含：标题区、内容区、操作区</p><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-label="Permalink to &quot;引用&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Modal, regist } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;litos-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Modal);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3><p>需要设置 <code>open</code> 属性，它接收 <code>Boolean</code>，当为 <code>true</code> 时显示 <code>Dialog</code>。<code>title</code> 属性用于定义标题，它是可选的，默认值为空。</p>`,7)),n(d,null,{default:r(()=>t[0]||(t[0]=[a("l-code-preview",null,[a("textarea",{lang:"html"},`  <l-modal open></l-modal>
`),a("div",{class:"source"},[a("textarea",{lang:"html"},`  <l-modal></l-modal>
`)])],-1)])),_:1}),t[2]||(t[2]=e('<h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="modal-attibutes" tabindex="-1">Modal Attibutes <a class="header-anchor" href="#modal-attibutes" aria-label="Permalink to &quot;Modal Attibutes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>x</td><td>x</td><td>x</td><td>x</td></tr></tbody></table><h3 id="modal-slots" tabindex="-1">Modal Slots <a class="header-anchor" href="#modal-slots" aria-label="Permalink to &quot;Modal Slots&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>default</code></td><td>内容</td></tr></tbody></table><h3 id="modal-events" tabindex="-1">Modal Events <a class="header-anchor" href="#modal-events" aria-label="Permalink to &quot;Modal Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击按钮时触发</td><td><code>(event: Event)</code></td></tr></tbody></table><h3 id="modal-methods" tabindex="-1">Modal Methods <a class="header-anchor" href="#modal-methods" aria-label="Permalink to &quot;Modal Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>方法名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>x</code></td><td>x</td><td><code>(x: number): string</code></td></tr></tbody></table><h3 id="modal-css-variables" tabindex="-1">Modal CSS Variables <a class="header-anchor" href="#modal-css-variables" aria-label="Permalink to &quot;Modal CSS Variables&quot;">​</a></h3><table tabindex="0"><thead><tr><th>变量名</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td><code>--l</code></td><td>x</td><td><code>#fff</code></td></tr></tbody></table>',11))])}const f=o(h,[["render",c]]);export{x as __pageData,f as default};
